{"ast":null,"code":"var _jsxFileName = \"/Users/roma/Documents/\\u041D\\u0430\\u0432\\u0447\\u0430\\u043D\\u043D\\u044F_JS/Front-End/\\u041C\\u043E\\u0434\\u0443\\u043B\\u044C 2. \\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 Front-end/\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430/fullstack-1/front/src/container/post-create/index.js\",\n  _s = $RefreshSig$();\nimport \"./index.css\";\nimport FieldForm from \"../../component/field-form\";\nimport Grid from \"../../component/grid\";\nimport { useReducer, memo, useCallback } from \"react\";\nimport { Alert, Loader } from \"../../component/load\";\nimport { requestInitialState, requestReducer, REQUEST_ACTION_TYPE } from \"../../util/request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Container({\n  onCreate,\n  placeholder,\n  button,\n  id = null\n}) {\n  _s();\n  const [state, dispatch] = useReducer(requestReducer, requestInitialState);\n  const convertData = useCallback(({\n    value\n  }) => JSON.stringify({\n    text: value,\n    username: 'user',\n    postId: id\n  }), [id]);\n  const handleSubmit = value => {\n    return sendData({\n      value\n    });\n  };\n  const sendData = useCallback(async dataToSend => {\n    dispatch({\n      type: REQUEST_ACTION_TYPE.PROGRESS\n    });\n    try {\n      const res = await fetch(\"http://localhost:4000/post-create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: convertData(dataToSend)\n      });\n      const data = await res.json();\n      if (res.ok) {\n        dispatch({\n          type: REQUEST_ACTION_TYPE.RESET\n        });\n        if (onCreate) onCreate();\n      } else {\n        dispatch({\n          type: REQUEST_ACTION_TYPE.ERROR,\n          message: data.message\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: REQUEST_ACTION_TYPE.ERROR,\n        message: error.message\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(FieldForm, {\n      placeholder: placeholder,\n      button: button,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), state.status === REQUEST_ACTION_TYPE.ERROR && /*#__PURE__*/_jsxDEV(Alert, {\n      status: state.status,\n      message: state.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), state.status === REQUEST_ACTION_TYPE.PROGRESS && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 57\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Container, \"r8IEtFKAEC/hdXryN4aW6JbiaDY=\");\n_c = Container;\nexport default _c2 = /*#__PURE__*/memo(Container, (prev, next) => {\n  return true;\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["FieldForm","Grid","useReducer","memo","useCallback","Alert","Loader","requestInitialState","requestReducer","REQUEST_ACTION_TYPE","jsxDEV","_jsxDEV","Container","onCreate","placeholder","button","id","_s","state","dispatch","convertData","value","JSON","stringify","text","username","postId","handleSubmit","sendData","dataToSend","type","PROGRESS","res","fetch","method","headers","body","data","json","ok","RESET","ERROR","message","error","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","status","_c","_c2","prev","next","$RefreshReg$"],"sources":["/Users/roma/Documents/Навчання_JS/Front-End/Модуль 2. Практика Front-end/Практика/fullstack-1/front/src/container/post-create/index.js"],"sourcesContent":["import \"./index.css\"\nimport FieldForm from \"../../component/field-form\"\nimport Grid from \"../../component/grid\"\nimport { useReducer, memo, useCallback } from \"react\"\nimport {Alert, Loader} from \"../../component/load\"\nimport { requestInitialState, requestReducer, REQUEST_ACTION_TYPE } from \"../../util/request\"\n\nfunction Container({onCreate, placeholder, button, id = null}) {\n  const [state, dispatch] = useReducer(requestReducer, requestInitialState)\n  \n  const convertData = useCallback(({value}) => \n    JSON.stringify({\n    text: value,\n    username: 'user',\n    postId: id,\n  }), [id])\n\n  const handleSubmit = (value) => {\n    return sendData({value})\n  }\n\n  const sendData = useCallback(async (dataToSend) => {\n    dispatch({type: REQUEST_ACTION_TYPE.PROGRESS})\n\n    try {\n      const res = await fetch(\"http://localhost:4000/post-create\", {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: convertData(dataToSend)\n      })\n      const data = await res.json()\n\n      if(res.ok) {\n        dispatch({type: REQUEST_ACTION_TYPE.RESET})\n        if(onCreate) onCreate()\n      } else {\n        dispatch({type: REQUEST_ACTION_TYPE.ERROR, message: data.message})\n      }\n    } catch (error) {\n      dispatch({type: REQUEST_ACTION_TYPE.ERROR, message: error.message})\n    }\n  }, [])\n  \n  return (\n    <Grid>\n      <FieldForm\n        placeholder={placeholder}\n        button={button}\n        onSubmit={handleSubmit}\n      />\n      {state.status === REQUEST_ACTION_TYPE.ERROR && (\n        <Alert status={state.status} message={state.message}/>\n      )}\n      {state.status === REQUEST_ACTION_TYPE.PROGRESS && <Loader/>}\n    </Grid>\n  )\n}\n\nexport default memo(Container, (prev, next) => {\n  return true\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}