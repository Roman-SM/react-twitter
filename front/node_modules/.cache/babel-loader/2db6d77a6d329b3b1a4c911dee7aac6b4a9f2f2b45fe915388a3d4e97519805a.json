{"ast":null,"code":"var _jsxFileName = \"/Users/roma/Documents/\\u041D\\u0430\\u0432\\u0447\\u0430\\u043D\\u043D\\u044F_JS/Front-End/\\u041C\\u043E\\u0434\\u0443\\u043B\\u044C 2. \\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 Front-end/\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430/fullstack-1/front/src/container/post-item/index.js\",\n  _s = $RefreshSig$();\nimport { useState, Fragment } from \"react\";\nimport Grid from \"../../component/grid\";\nimport Box from \"../../component/box\";\nimport PostCreate from \"../post-create\";\nimport getDate from \"../../util/getDate\";\nimport PostContent from \"../../component/post-content\";\nimport { LOAD_STATUS } from \"../../component/load\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Container({\n  id,\n  username,\n  text,\n  date\n}) {\n  _s();\n  const [data, setData] = useState({\n    id,\n    username,\n    text,\n    date,\n    reply: null\n  });\n  const [status, setStatus] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const getData = async () => {\n    setStatus(LOAD_STATUS.PROGRESS);\n    try {\n      // метод method: \"GET\" іде за замовчуванням і його можна не вказувати\n      const res = await fetch(`http://localhost:4000/post-item?id=${data.id}`);\n      const resData = await res.json();\n      if (res.ok) {\n        setData(convertData(resData));\n        setStatus(LOAD_STATUS.SUCCESS);\n      } else {\n        setMessage(resData.message);\n        setStatus(LOAD_STATUS.ERROR);\n      }\n    } catch (error) {\n      setMessage(error.message);\n      setStatus(LOAD_STATUS.ERROR);\n    }\n  };\n  const [isOpen, setIsOpen] = useState(false);\n  const handleOpen = () => {\n    setIsOpen(!isOpen);\n  };\n  const convertData = ({\n    post\n  }) => ({\n    id: post.id,\n    username: post.username,\n    text: post.text,\n    date: post.date,\n    reply: post.list.reverse().map(({\n      id,\n      username,\n      text,\n      date\n    }) => ({\n      id,\n      username,\n      text,\n      date: getDate(date)\n    })),\n    isEmpty: post.list.length === 0\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      padding: \"0\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"20px\",\n        cursor: \"pointer\"\n      },\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(PostContent, {\n        username: data.username,\n        date: data.date,\n        text: data.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"0 20px 20px 20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(PostCreate, {\n            placeholder: \"Post your reply\",\n            button: \"Reply\",\n            id: data.id,\n            onCreate: getData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Container, \"hjZYBPMVzvm6Ym9NleAxVBnKMJQ=\");\n_c = Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["useState","Fragment","Grid","Box","PostCreate","getDate","PostContent","LOAD_STATUS","jsxDEV","_jsxDEV","Container","id","username","text","date","_s","data","setData","reply","status","setStatus","message","setMessage","getData","PROGRESS","res","fetch","resData","json","ok","convertData","SUCCESS","ERROR","error","isOpen","setIsOpen","handleOpen","post","list","reverse","map","isEmpty","length","style","padding","children","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","button","onCreate","_c","$RefreshReg$"],"sources":["/Users/roma/Documents/Навчання_JS/Front-End/Модуль 2. Практика Front-end/Практика/fullstack-1/front/src/container/post-item/index.js"],"sourcesContent":["import { useState, Fragment } from \"react\"\nimport Grid from \"../../component/grid\"\nimport Box from \"../../component/box\"\nimport PostCreate from \"../post-create\"\nimport getDate from \"../../util/getDate\"\nimport PostContent from \"../../component/post-content\"\nimport { LOAD_STATUS } from \"../../component/load\"\n\nexport default function Container({id, username, text, date}) {\n  const [data, setData] = useState({id, username, text, date, reply: null})\n  \n  const [status, setStatus] = useState(null)\n  const [message, setMessage] = useState(\"\")\n\n  const getData = async () => {\n    setStatus(LOAD_STATUS.PROGRESS)\n    try {\n      // метод method: \"GET\" іде за замовчуванням і його можна не вказувати\n      const res = await fetch(`http://localhost:4000/post-item?id=${data.id}`)\n\n      const resData = await res.json()\n\n      if(res.ok) {\n        setData(convertData(resData))\n        setStatus(LOAD_STATUS.SUCCESS)\n      } else {\n        setMessage(resData.message)\n        setStatus(LOAD_STATUS.ERROR)\n      }\n    } catch (error) {\n      setMessage(error.message)\n      setStatus(LOAD_STATUS.ERROR)\n    }\n  }\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  const handleOpen = () => {\n    setIsOpen(!isOpen)\n  }\n\n  const convertData = ({post}) => ({\n    id: post.id,\n    username: post.username,\n    text: post.text,\n    date: post.date,\n\n    reply: post.list.reverse().map(({id, username, text, date}) => ({\n      id,\n      username,\n      text,\n      date: getDate(date),\n    })),\n    isEmpty: post.list.length === 0\n  })\n  \n  return (\n    <Box style={{padding: \"0\"}}>\n      <div style={{padding: \"20px\", cursor: \"pointer\"}} onClick={handleOpen}>\n        <PostContent\n          username={data.username}\n          date={data.date}\n          text={data.text}\n        />\n      </div>\n      {isOpen && (\n        <div style={{padding: \"0 20px 20px 20px\"}}>\n          <Grid>\n            <Box>\n              <PostCreate\n                placeholder=\"Post your reply\"\n                button=\"Reply\"\n                id={data.id}\n                onCreate={getData}\n              />\n            </Box>\n          </Grid>\n        </div>\n      )}\n    </Box>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}