{"ast":null,"code":"var _jsxFileName = \"/Users/roma/Documents/\\u041D\\u0430\\u0432\\u0447\\u0430\\u043D\\u043D\\u044F_JS/Front-End/\\u041C\\u043E\\u0434\\u0443\\u043B\\u044C 2. \\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 Front-end/\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430/fullstack-1/front/src/container/post-create/index.js\",\n  _s = $RefreshSig$();\nimport \"./index.css\";\nimport FieldForm from \"../../component/field-form\";\nimport Grid from \"../../component/grid\";\nimport { useState } from \"react\";\nimport { Alert, Loader, LOAD_STATUS } from \"../../component/load\";\nimport { requestInitialState, requestReducer, REQUEST_ACTION_TYPE } from \"../../util/request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Container({\n  onCreate,\n  placeholder,\n  button,\n  id = null\n}) {\n  _s();\n  const [state, dispatch] = useReducer(requestReducer, requestInitialState);\n  const handleSubmit = value => {\n    return sendData({\n      value\n    });\n  };\n  const sendData = async dataToSend => {\n    dispatch({\n      type: REQUEST_ACTION_TYPE.PROGRESS\n    });\n    try {\n      const res = await fetch(\"http://localhost:4000/post-create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: convertData(dataToSend)\n      });\n      const data = await res.json();\n      if (res.ok) {\n        dispatch({\n          type: REQUEST_ACTION_TYPE.RESET\n        });\n        if (onCreate) onCreate();\n      } else {\n        setMessage(data.message);\n        setStatus(LOAD_STATUS.ERROR);\n      }\n    } catch (error) {\n      setMessage(error.message);\n      setStatus(LOAD_STATUS.ERROR);\n    }\n  };\n  const convertData = ({\n    value\n  }) => JSON.stringify({\n    text: value,\n    username: 'user',\n    postId: id\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(FieldForm, {\n      placeholder: placeholder,\n      button: button,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), status === LOAD_STATUS.ERROR && /*#__PURE__*/_jsxDEV(Alert, {\n      status: status,\n      message: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this), status === LOAD_STATUS.PROGRESS && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 45\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(Container, \"JOt/vEIlCTw33KydD9YfGt76Yho=\");\n_c = Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["FieldForm","Grid","useState","Alert","Loader","LOAD_STATUS","requestInitialState","requestReducer","REQUEST_ACTION_TYPE","jsxDEV","_jsxDEV","Container","onCreate","placeholder","button","id","_s","state","dispatch","useReducer","handleSubmit","value","sendData","dataToSend","type","PROGRESS","res","fetch","method","headers","body","convertData","data","json","ok","RESET","setMessage","message","setStatus","ERROR","error","JSON","stringify","text","username","postId","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","status","_c","$RefreshReg$"],"sources":["/Users/roma/Documents/Навчання_JS/Front-End/Модуль 2. Практика Front-end/Практика/fullstack-1/front/src/container/post-create/index.js"],"sourcesContent":["import \"./index.css\"\nimport FieldForm from \"../../component/field-form\"\nimport Grid from \"../../component/grid\"\nimport { useState } from \"react\"\nimport {Alert, Loader, LOAD_STATUS} from \"../../component/load\"\nimport { requestInitialState, requestReducer, REQUEST_ACTION_TYPE } from \"../../util/request\"\n\nexport default function Container({onCreate, placeholder, button, id = null}) {\n  const [state, dispatch] = useReducer(requestReducer, requestInitialState)\n  \n  const handleSubmit = (value) => {\n    return sendData({value})\n  }\n\n  const sendData = async (dataToSend) => {\n    dispatch({type: REQUEST_ACTION_TYPE.PROGRESS})\n\n    try {\n      const res = await fetch(\"http://localhost:4000/post-create\", {\n        method: \"POST\",\n        headers: {\"Content-Type\": \"application/json\"},\n        body: convertData(dataToSend)\n      })\n      const data = await res.json()\n\n      if(res.ok) {\n        dispatch({type: REQUEST_ACTION_TYPE.RESET})\n\n        if(onCreate) onCreate()\n      } else {\n        setMessage(data.message)\n        setStatus(LOAD_STATUS.ERROR)\n      }\n    } catch (error) {\n      setMessage(error.message)\n      setStatus(LOAD_STATUS.ERROR)\n    }\n  }\n  const convertData = ({value}) => \n      JSON.stringify({\n      text: value,\n      username: 'user',\n      postId: id,\n    })\n\n  return (\n    <Grid>\n        <FieldForm\n          placeholder={placeholder}\n          button={button}\n          onSubmit={handleSubmit}\n        />\n        {status === LOAD_STATUS.ERROR && (\n          <Alert status={status} message={message}/>\n        )}\n        {status === LOAD_STATUS.PROGRESS && <Loader/>}\n    </Grid>\n  )\n}"],"mappings":";;AAAA,OAAO,aAAa;AACpB,OAAOA,SAAS,MAAM,4BAA4B;AAClD,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAAQC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAO,sBAAsB;AAC/D,SAASC,mBAAmB,EAAEC,cAAc,EAAEC,mBAAmB,QAAQ,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7F,eAAe,SAASC,SAASA,CAAC;EAACC,QAAQ;EAAEC,WAAW;EAAEC,MAAM;EAAEC,EAAE,GAAG;AAAI,CAAC,EAAE;EAAAC,EAAA;EAC5E,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,UAAU,CAACZ,cAAc,EAAED,mBAAmB,CAAC;EAEzE,MAAMc,YAAY,GAAIC,KAAK,IAAK;IAC9B,OAAOC,QAAQ,CAAC;MAACD;IAAK,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMC,QAAQ,GAAG,MAAOC,UAAU,IAAK;IACrCL,QAAQ,CAAC;MAACM,IAAI,EAAEhB,mBAAmB,CAACiB;IAAQ,CAAC,CAAC;IAE9C,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAmC,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAC,cAAc,EAAE;QAAkB,CAAC;QAC7CC,IAAI,EAAEC,WAAW,CAACR,UAAU;MAC9B,CAAC,CAAC;MACF,MAAMS,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;MAE7B,IAAGP,GAAG,CAACQ,EAAE,EAAE;QACThB,QAAQ,CAAC;UAACM,IAAI,EAAEhB,mBAAmB,CAAC2B;QAAK,CAAC,CAAC;QAE3C,IAAGvB,QAAQ,EAAEA,QAAQ,CAAC,CAAC;MACzB,CAAC,MAAM;QACLwB,UAAU,CAACJ,IAAI,CAACK,OAAO,CAAC;QACxBC,SAAS,CAACjC,WAAW,CAACkC,KAAK,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,UAAU,CAACI,KAAK,CAACH,OAAO,CAAC;MACzBC,SAAS,CAACjC,WAAW,CAACkC,KAAK,CAAC;IAC9B;EACF,CAAC;EACD,MAAMR,WAAW,GAAGA,CAAC;IAACV;EAAK,CAAC,KACxBoB,IAAI,CAACC,SAAS,CAAC;IACfC,IAAI,EAAEtB,KAAK;IACXuB,QAAQ,EAAE,MAAM;IAChBC,MAAM,EAAE9B;EACV,CAAC,CAAC;EAEJ,oBACEL,OAAA,CAACT,IAAI;IAAA6C,QAAA,gBACDpC,OAAA,CAACV,SAAS;MACRa,WAAW,EAAEA,WAAY;MACzBC,MAAM,EAAEA,MAAO;MACfiC,QAAQ,EAAE3B;IAAa;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,EACDC,MAAM,KAAK/C,WAAW,CAACkC,KAAK,iBAC3B7B,OAAA,CAACP,KAAK;MAACiD,MAAM,EAAEA,MAAO;MAACf,OAAO,EAAEA;IAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAC1C,EACAC,MAAM,KAAK/C,WAAW,CAACoB,QAAQ,iBAAIf,OAAA,CAACN,MAAM;MAAA4C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEX;AAACnC,EAAA,CAnDuBL,SAAS;AAAA0C,EAAA,GAAT1C,SAAS;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}