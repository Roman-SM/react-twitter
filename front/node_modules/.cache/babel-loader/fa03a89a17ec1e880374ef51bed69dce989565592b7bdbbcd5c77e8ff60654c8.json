{"ast":null,"code":"var _jsxFileName = \"/Users/roma/Documents/\\u041D\\u0430\\u0432\\u0447\\u0430\\u043D\\u043D\\u044F_JS/Front-End/\\u041C\\u043E\\u0434\\u0443\\u043B\\u044C 2. \\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 Front-end/\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430/fullstack-1/front/src/container/post-create/index.js\",\n  _s = $RefreshSig$();\nimport \"./index.css\";\nimport FieldForm from \"../../component/field-form\";\nimport Grid from \"../../component/grid\";\nimport { useReducer, memo, useCallback } from \"react\";\nimport { Alert, Loader } from \"../../component/load\";\nimport { requestInitialState, requestReducer, REQUEST_ACTION_TYPE } from \"../../util/request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Container({\n  onCreate,\n  placeholder,\n  button,\n  id = null\n}) {\n  _s();\n  const [state, dispatch] = useReducer(requestReducer, requestInitialState);\n  const convertData = useCallback(({\n    value\n  }) => JSON.stringify({\n    text: value,\n    username: \"user\",\n    postId: id\n  }), [id]);\n  const sendData = useCallback(async dataToSend => {\n    dispatch({\n      type: REQUEST_ACTION_TYPE.PROGRESS\n    });\n    try {\n      const res = await fetch(\"http://localhost:4000/post-create\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: convertData(dataToSend)\n      });\n      const data = await res.json();\n      if (res.ok) {\n        dispatch({\n          type: REQUEST_ACTION_TYPE.RESET\n        });\n        if (onCreate) onCreate();\n      } else {\n        dispatch({\n          type: REQUEST_ACTION_TYPE.ERROR,\n          message: data.message\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: REQUEST_ACTION_TYPE.ERROR,\n        message: error.message\n      });\n    }\n  }, [convertData, onCreate]);\n  const handleSubmit = useCallback(value => {\n    return sendData({\n      value\n    });\n  }, [sendData]);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: [/*#__PURE__*/_jsxDEV(FieldForm, {\n      placeholder: placeholder,\n      button: button,\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), state.status === REQUEST_ACTION_TYPE.ERROR && /*#__PURE__*/_jsxDEV(Alert, {\n      status: state.status,\n      message: state.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), state.status === REQUEST_ACTION_TYPE.PROGRESS && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 57\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(Container, \"3ZiXD7mTTewPkXvQ+OkEXDKJ1uA=\");\n_c = Container;\nexport default _c2 = /*#__PURE__*/memo(Container, (prev, next) => {\n  return true;\n});\nvar _c, _c2;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["FieldForm","Grid","useReducer","memo","useCallback","Alert","Loader","requestInitialState","requestReducer","REQUEST_ACTION_TYPE","jsxDEV","_jsxDEV","Container","onCreate","placeholder","button","id","_s","state","dispatch","convertData","value","JSON","stringify","text","username","postId","sendData","dataToSend","type","PROGRESS","res","fetch","method","headers","body","data","json","ok","RESET","ERROR","message","error","handleSubmit","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","status","_c","_c2","prev","next","$RefreshReg$"],"sources":["/Users/roma/Documents/Навчання_JS/Front-End/Модуль 2. Практика Front-end/Практика/fullstack-1/front/src/container/post-create/index.js"],"sourcesContent":["import \"./index.css\";\nimport FieldForm from \"../../component/field-form\";\nimport Grid from \"../../component/grid\";\nimport { useReducer, memo, useCallback } from \"react\";\nimport { Alert, Loader } from \"../../component/load\";\nimport {\n  requestInitialState,\n  requestReducer,\n  REQUEST_ACTION_TYPE,\n} from \"../../util/request\";\n\nfunction Container({ onCreate, placeholder, button, id = null }) {\n  const [state, dispatch] = useReducer(requestReducer, requestInitialState);\n\n  const convertData = useCallback(\n    ({ value }) =>\n      JSON.stringify({\n        text: value,\n        username: \"user\",\n        postId: id,\n      }),\n    [id]\n  );\n\n  const sendData = useCallback(\n    async (dataToSend) => {\n      dispatch({ type: REQUEST_ACTION_TYPE.PROGRESS });\n\n      try {\n        const res = await fetch(\"http://localhost:4000/post-create\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: convertData(dataToSend),\n        });\n        const data = await res.json();\n\n        if (res.ok) {\n          dispatch({ type: REQUEST_ACTION_TYPE.RESET });\n          if (onCreate) onCreate();\n        } else {\n          dispatch({ type: REQUEST_ACTION_TYPE.ERROR, message: data.message });\n        }\n      } catch (error) {\n        dispatch({ type: REQUEST_ACTION_TYPE.ERROR, message: error.message });\n      }\n    },\n    [convertData, onCreate]\n  );\n\n  const handleSubmit = useCallback(\n    (value) => {\n      return sendData({ value });\n    },\n    [sendData]\n  );\n\n  return (\n    <Grid>\n      <FieldForm\n        placeholder={placeholder}\n        button={button}\n        onSubmit={handleSubmit}\n      />\n      {state.status === REQUEST_ACTION_TYPE.ERROR && (\n        <Alert status={state.status} message={state.message} />\n      )}\n      {state.status === REQUEST_ACTION_TYPE.PROGRESS && <Loader />}\n    </Grid>\n  );\n}\n\nexport default memo(Container, (prev, next) => {\n  return true;\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}