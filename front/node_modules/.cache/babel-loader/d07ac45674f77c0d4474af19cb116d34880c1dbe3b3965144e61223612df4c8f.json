{"ast":null,"code":"var _jsxFileName = \"/Users/roma/Documents/\\u041D\\u0430\\u0432\\u0447\\u0430\\u043D\\u043D\\u044F_JS/Front-End/\\u041C\\u043E\\u0434\\u0443\\u043B\\u044C 2. \\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 Front-end/\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430/fullstack-1/front/src/container/post-item/index.js\",\n  _s = $RefreshSig$();\nimport { useState, Fragment, useEffect, useReducer } from \"react\";\nimport { requestInitialState, requestReducer, REQUEST_ACTION_TYPE } from \"../../util/request\";\nimport Grid from \"../../component/grid\";\nimport Box from \"../../component/box\";\nimport PostCreate from \"../post-create\";\nimport { getDate } from \"../../util/getDate\";\nimport PostContent from \"../../component/post-content\";\nimport { Skeleton, Alert } from \"../../component/load\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Container({\n  id,\n  username,\n  text,\n  date\n}) {\n  _s();\n  const [state, dispatch] = useReducer(requestReducer, requestInitialState, state => ({\n    ...state,\n    data: {\n      id,\n      username,\n      text,\n      date,\n      reply: null\n    }\n  }));\n  const getData = async () => {\n    dispatch(REQUEST_ACTION_TYPE.PROGRESS);\n    try {\n      // метод method: \"GET\" іде за замовчуванням і його можна не вказувати\n      const res = await fetch(`http://localhost:4000/post-item?id=${state.data.id}`);\n      const resData = await res.json();\n      if (res.ok) {\n        dispatch({\n          type: REQUEST_ACTION_TYPE.SUCCESS,\n          payload: convertData(resData)\n        });\n      } else {\n        dispatch({\n          type: REQUEST_ACTION_TYPE.ERROR,\n          payload: resData.message\n        });\n      }\n    } catch (error) {\n      dispatch({\n        type: REQUEST_ACTION_TYPE.ERROR,\n        payload: error.message\n      });\n    }\n  };\n  const [isOpen, setIsOpen] = useState(false);\n  const convertData = ({\n    post\n  }) => ({\n    id: post.id,\n    username: post.username,\n    text: post.text,\n    date: getDate(post.date),\n    reply: post.reply.reverse().map(({\n      id,\n      username,\n      text,\n      date\n    }) => ({\n      id,\n      username,\n      text,\n      date: getDate(date)\n    })),\n    isEmpty: post.reply.length === 0\n  });\n  const handleOpen = () => {\n    setIsOpen(!isOpen);\n  };\n  useEffect(() => {\n    if (isOpen === true) getData();\n  }, [isOpen]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      padding: \"0\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"20px\",\n        cursor: \"pointer\"\n      },\n      onClick: handleOpen,\n      children: /*#__PURE__*/_jsxDEV(PostContent, {\n        username: state.data.username,\n        date: state.data.date,\n        text: state.data.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"0 20px 20px 20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(PostCreate, {\n            placeholder: \"Post your reply\",\n            button: \"Reply\",\n            id: state.data.id,\n            onCreate: getData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), state.status === REQUEST_ACTION_TYPE.PROGRESS && /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Skeleton, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 22\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), state.status === REQUEST_ACTION_TYPE.ERROR && /*#__PURE__*/_jsxDEV(Alert, {\n          status: state.status,\n          message: state.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), state.status === REQUEST_ACTION_TYPE.SUCCESS && state.data.isEmpty === false && state.data.reply.map(item => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(PostContent, {\n              ...item\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this)\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Container, \"vxPElAvDZppgNvEOQkAlymNmdas=\");\n_c = Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["useState","Fragment","useEffect","useReducer","requestInitialState","requestReducer","REQUEST_ACTION_TYPE","Grid","Box","PostCreate","getDate","PostContent","Skeleton","Alert","jsxDEV","_jsxDEV","Container","id","username","text","date","_s","state","dispatch","data","reply","getData","PROGRESS","res","fetch","resData","json","ok","type","SUCCESS","payload","convertData","ERROR","message","error","isOpen","setIsOpen","post","reverse","map","isEmpty","length","handleOpen","style","padding","children","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","button","onCreate","status","item","_c","$RefreshReg$"],"sources":["/Users/roma/Documents/Навчання_JS/Front-End/Модуль 2. Практика Front-end/Практика/fullstack-1/front/src/container/post-item/index.js"],"sourcesContent":["import { useState, Fragment, useEffect, useReducer } from \"react\"\nimport { requestInitialState, requestReducer, REQUEST_ACTION_TYPE } from \"../../util/request\"\nimport Grid from \"../../component/grid\"\nimport Box from \"../../component/box\"\nimport PostCreate from \"../post-create\"\nimport { getDate } from \"../../util/getDate\"\nimport PostContent from \"../../component/post-content\"\nimport { Skeleton, Alert,  } from \"../../component/load\"\n\nexport default function Container({id, username, text, date}) {\n  const [state, dispatch] = useReducer(requestReducer, requestInitialState, (state) => ({...state, data: {id, username, text, date, reply: null}}))\n\n  const getData = async () => {\n    dispatch(REQUEST_ACTION_TYPE.PROGRESS)\n    try {\n      // метод method: \"GET\" іде за замовчуванням і його можна не вказувати\n      const res = await fetch(`http://localhost:4000/post-item?id=${state.data.id}`)\n\n      const resData = await res.json()\n\n      if(res.ok) {\n        dispatch({type: REQUEST_ACTION_TYPE.SUCCESS, payload: convertData(resData)})\n      } else {\n        dispatch({type: REQUEST_ACTION_TYPE.ERROR, payload: resData.message})\n      }\n    } catch (error) {\n      dispatch({type: REQUEST_ACTION_TYPE.ERROR, payload: error.message})\n    }\n  }\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  const convertData = ({post}) => ({\n    id: post.id,\n    username: post.username,\n    text: post.text,\n    date: getDate(post.date),\n\n    reply: post.reply.reverse().map(({id, username, text, date}) => ({\n      id,\n      username,\n      text,\n      date: getDate(date),\n    })),\n    isEmpty: post.reply.length === 0\n  })\n\n  const handleOpen = () => {\n    setIsOpen(!isOpen)\n  }\n\n  useEffect(() => {\n    if (isOpen === true) getData()\n  }, [isOpen])\n  \n  return (\n    <Box style={{padding: \"0\"}}>\n      <div style={{padding: \"20px\", cursor: \"pointer\"}} onClick={handleOpen}>\n        <PostContent\n          username={state.data.username}\n          date={state.data.date}\n          text={state.data.text}\n        />\n      </div>\n      {isOpen && (\n        <div style={{padding: \"0 20px 20px 20px\"}}>\n          <Grid>\n            <Box>\n              <PostCreate\n                placeholder=\"Post your reply\"\n                button=\"Reply\"\n                id={state.data.id}\n                onCreate={getData}\n              />\n            </Box>\n            {state.status === REQUEST_ACTION_TYPE.PROGRESS && (\n              <Fragment>\n                <Box><Skeleton/></Box>\n                <Box><Skeleton/></Box>\n              </Fragment>\n            )}\n            {state.status === REQUEST_ACTION_TYPE.ERROR && (\n              <Alert status={state.status} message={state.message}/>\n            )}\n            {state.status === REQUEST_ACTION_TYPE.SUCCESS && state.data.isEmpty === false && \n              state.data.reply.map((item) => (\n                <Fragment key={item.id}>\n                  <Box><PostContent {...item}/></Box>\n                </Fragment>\n              ))\n            }\n          </Grid>\n        </div>\n      )}\n    </Box>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}