{"ast":null,"code":"var _jsxFileName = \"/Users/roma/Documents/\\u041D\\u0430\\u0432\\u0447\\u0430\\u043D\\u043D\\u044F_JS/Front-End/\\u041C\\u043E\\u0434\\u0443\\u043B\\u044C 2. \\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 Front-end/\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430/fullstack-1/front/src/container/post-list/index.js\",\n  _s = $RefreshSig$();\nimport \"./index.css\";\nimport { useState, Fragment } from \"react\";\nimport Title from \"../../component/title\";\nimport Grid from \"../../component/grid\";\nimport Box from \"../../component/box\";\nimport PostCreate from \"../post-create\";\nimport { LOAD_STATUS } from \"../../component/load\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Container() {\n  _s();\n  const [status, setStatus] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [data, setData] = useState(null);\n  const getData = async () => {\n    setStatus(LOAD_STATUS.PROGRESS);\n    try {\n      // метод method: \"GET\" іде за замовчуванням і його можна не вказувати\n      const res = await fetch(\"http://localhost:4000/post-list\");\n      const data = await res.json();\n      if (res.ok) {\n        setData(convertData(data));\n        setStatus(LOAD_STATUS.PROGRESS);\n      } else {\n        setMessage(data.message);\n        setStatus(LOAD_STATUS.ERROR);\n      }\n    } catch (error) {\n      setMessage(error.message);\n      setStatus(LOAD_STATUS.ERROR);\n    }\n  };\n  const convertData = raw => ({\n    list: raw.list.rewers().map(({\n      id,\n      username,\n      text,\n      date\n    }) => {})\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PostCreate, {\n          onCreate: getData,\n          placeholder: \"What is happening?!\",\n          button: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(Container, \"KM068ITtOtgMHlvM+TrQXPMjT9c=\");\n_c = Container;\nvar _c;\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"names":["useState","Fragment","Title","Grid","Box","PostCreate","LOAD_STATUS","jsxDEV","_jsxDEV","Container","_s","status","setStatus","message","setMessage","data","setData","getData","PROGRESS","res","fetch","json","ok","convertData","ERROR","error","raw","list","rewers","map","id","username","text","date","children","fileName","_jsxFileName","lineNumber","columnNumber","onCreate","placeholder","button","_c","$RefreshReg$"],"sources":["/Users/roma/Documents/Навчання_JS/Front-End/Модуль 2. Практика Front-end/Практика/fullstack-1/front/src/container/post-list/index.js"],"sourcesContent":["import \"./index.css\"\nimport { useState, Fragment } from \"react\"\nimport Title from \"../../component/title\"\nimport Grid from \"../../component/grid\"\nimport Box from \"../../component/box\"\nimport PostCreate from \"../post-create\"\nimport { LOAD_STATUS } from \"../../component/load\"\n\nexport default function Container() {\n  const [status, setStatus] = useState(null)\n  const [message, setMessage] = useState(\"\")\n  const [data, setData] = useState(null)\n\n  const getData = async () => {\n    setStatus(LOAD_STATUS.PROGRESS)\n\n    try {\n      // метод method: \"GET\" іде за замовчуванням і його можна не вказувати\n      const res = await fetch(\"http://localhost:4000/post-list\")\n\n      const data = await res.json()\n\n      if(res.ok) {\n        setData(convertData(data))\n        setStatus(LOAD_STATUS.PROGRESS)\n      } else {\n        setMessage(data.message)\n        setStatus(LOAD_STATUS.ERROR)\n      }\n    } catch (error) {\n      setMessage(error.message)\n      setStatus(LOAD_STATUS.ERROR)\n    }\n  }\n  const convertData = (raw) => ({\n    list: raw.list.rewers().map(({id, username, text, date}) => {\n      \n    })\n  })\n\n  return (\n    <Grid>\n      <Box>\n        <Grid>\n          <Title>Home</Title>\n          <PostCreate\n            onCreate={getData}\n            placeholder=\"What is happening?!\"\n            button=\"Post\"\n          />\n        </Grid>\n      </Box>\n    </Grid>\n  )\n}"],"mappings":";;AAAA,OAAO,aAAa;AACpB,SAASA,QAAQ,EAAEC,QAAQ,QAAQ,OAAO;AAC1C,OAAOC,KAAK,MAAM,uBAAuB;AACzC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,UAAU,MAAM,gBAAgB;AACvC,SAASC,WAAW,QAAQ,sBAAsB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMiB,OAAO,GAAG,MAAAA,CAAA,KAAY;IAC1BL,SAAS,CAACN,WAAW,CAACY,QAAQ,CAAC;IAE/B,IAAI;MACF;MACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAE1D,MAAML,IAAI,GAAG,MAAMI,GAAG,CAACE,IAAI,CAAC,CAAC;MAE7B,IAAGF,GAAG,CAACG,EAAE,EAAE;QACTN,OAAO,CAACO,WAAW,CAACR,IAAI,CAAC,CAAC;QAC1BH,SAAS,CAACN,WAAW,CAACY,QAAQ,CAAC;MACjC,CAAC,MAAM;QACLJ,UAAU,CAACC,IAAI,CAACF,OAAO,CAAC;QACxBD,SAAS,CAACN,WAAW,CAACkB,KAAK,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdX,UAAU,CAACW,KAAK,CAACZ,OAAO,CAAC;MACzBD,SAAS,CAACN,WAAW,CAACkB,KAAK,CAAC;IAC9B;EACF,CAAC;EACD,MAAMD,WAAW,GAAIG,GAAG,KAAM;IAC5BC,IAAI,EAAED,GAAG,CAACC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC;MAACC,EAAE;MAAEC,QAAQ;MAAEC,IAAI;MAAEC;IAAI,CAAC,KAAK,CAE5D,CAAC;EACH,CAAC,CAAC;EAEF,oBACEzB,OAAA,CAACL,IAAI;IAAA+B,QAAA,eACH1B,OAAA,CAACJ,GAAG;MAAA8B,QAAA,eACF1B,OAAA,CAACL,IAAI;QAAA+B,QAAA,gBACH1B,OAAA,CAACN,KAAK;UAAAgC,QAAA,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnB9B,OAAA,CAACH,UAAU;UACTkC,QAAQ,EAAEtB,OAAQ;UAClBuB,WAAW,EAAC,qBAAqB;UACjCC,MAAM,EAAC;QAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACd,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAAC5B,EAAA,CA9CuBD,SAAS;AAAAiC,EAAA,GAATjC,SAAS;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}