{"ast":null,"code":"var _jsxFileName = \"/Users/roma/Documents/\\u041D\\u0430\\u0432\\u0447\\u0430\\u043D\\u043D\\u044F_JS/Front-End/\\u041C\\u043E\\u0434\\u0443\\u043B\\u044C 2. \\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430 Front-end/\\u041F\\u0440\\u0430\\u043A\\u0442\\u0438\\u043A\\u0430/fullstack-1/front/src/App.js\";\nimport Page from \"./component/page\";\nimport PostList from \"./container/post-list\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: /*#__PURE__*/_jsxDEV(PostList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n// import { useMemo,  useState, createContext, } from \"react\";\n\n// export const THEME_TYPE = {\n//   LIGHT: \"light\",\n//   DARK: \"dark\"\n// }\n\n// export const ThemeContext = createContext(null)\n\n// const THEME_ACTION_TYPE = {\n//   TOGGLE: 'toggle'\n// }\n\n// const themeReducer = (state, action) => {\n//   switch (action.type) {\n//     case THEME_ACTION_TYPE.TOGGLE:\n//       return state === THEME_TYPE.DARK ? THEME_TYPE.LIGHT : THEME_TYPE.DARK\n//     default: return state\n//   }\n// }\n\n// function App() {\n//   const [currentTheme, dispatch] = useReducer(themeReducer, THEME_TYPE.LIGHT)\n\n//   const theme = useMemo (() => ({\n//     value: currentTheme,\n//     toggle: () => dispatch({type: THEME_ACTION_TYPE.TOGGLE})\n//   }), [currentTheme])\n\n//   return (\n//     <Page>\n//       <ThemeContext.Provider value={theme}>\n//         <PostList />\n//       </ThemeContext.Provider>\n//     </Page>\n//   )\n// }\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Page","PostList","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/roma/Documents/Навчання_JS/Front-End/Модуль 2. Практика Front-end/Практика/fullstack-1/front/src/App.js"],"sourcesContent":["import Page from \"./component/page\";\nimport PostList from \"./container/post-list\";\n\nfunction App() {\n  return (\n    <Page>\n      <PostList />\n    </Page>\n  );\n}\n\n// import { useMemo,  useState, createContext, } from \"react\";\n\n// export const THEME_TYPE = {\n//   LIGHT: \"light\",\n//   DARK: \"dark\"\n// }\n\n// export const ThemeContext = createContext(null)\n\n// const THEME_ACTION_TYPE = {\n//   TOGGLE: 'toggle'\n// }\n\n// const themeReducer = (state, action) => {\n//   switch (action.type) {\n//     case THEME_ACTION_TYPE.TOGGLE:\n//       return state === THEME_TYPE.DARK ? THEME_TYPE.LIGHT : THEME_TYPE.DARK\n//     default: return state\n//   }\n// }\n\n// function App() {\n//   const [currentTheme, dispatch] = useReducer(themeReducer, THEME_TYPE.LIGHT)\n\n//   const theme = useMemo (() => ({\n//     value: currentTheme,\n//     toggle: () => dispatch({type: THEME_ACTION_TYPE.TOGGLE})\n//   }), [currentTheme])\n\n//   return (\n//     <Page>\n//       <ThemeContext.Provider value={theme}>\n//         <PostList />\n//       </ThemeContext.Provider>\n//     </Page>\n//   )\n// }\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,kBAAkB;AACnC,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA,CAACH,IAAI;IAAAK,QAAA,eACHF,OAAA,CAACF,QAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEX;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAC,EAAA,GA5CSN,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}